// https://github.com/rolandtoth/hamburger-mixin/blob/master/hamburger.scss
// https://codepen.io/rolandtoth/pen/LypvrV?editors=1100
// helper mixin
@mixin hamburger_tint(
  $color: #000,
  $tint_text: false,
  $labelselector: '+ label'
) {
  #{$labelselector} {
    i,
    &::before,
    &::after {
      background-color: $color;
    }
    @if $tint_text {
      span {
        color: $color;
      }
    }
  }
}

// main mixin
@mixin hamburger(
  $width: 32px,
  $thickness: 2px,
  $gap: 5px,
  $color: #fff,
  $background: transparent,
  $tint_text: false,
  $radius: 0,
  $radius_background: 0,
  $anim: 0.25s,
  $labelselector: '+ label',
  $padding: 0,
  $text: 'right',
  $style: false
) {
  $height: ($thickness * 3) + ($gap * 2);
  @if $background != transparent and $padding == 0 {
    $padding: round(($thickness + $gap) / 1.5);
  }
  display: none;
  #{$labelselector} {
    user-select: none;
    position: relative;
    display: inline-block;
    width: $width;
    height: $height;
    box-sizing: content-box;
    border: $padding solid transparent;
    z-index: 1050;
    line-height: $height;
    white-space: nowrap;
    background: $background;
    border-radius: $radius_background;
    span {
      display: inline-block;
      position: absolute;
      left: 100%;
      margin-top: 1px;
      transition: color $anim;
      margin-left: $padding;
      @if $text == false {
        display: none;
      } @else if $text == 'left' {
        left: auto;
        right: 100%;
        margin-left: 0;
        margin-right: $padding;
      }
      &::before,
      &::after {
        content: '';
        display: inline-block;
        min-width: 10px;
        width: $width * 0.2;
      }
    }
    i,
    &::before,
    &::after {
      position: absolute;
      left: 0;
      display: block;
      will-change: transform, background-color;
      width: $width;
      height: $thickness;
      border-radius: $radius;
      transition: transform $anim, background-color $anim;
      backface-visibility: hidden;
      outline: 1px solid transparent; // Firefox jagged animation fix
    }
    i {
      top: $thickness + $gap;
      // hide text
      font-size: 0;
      color: transparent;
      line-height: 0;
      @if $style == 'align-left' {
        max-width: $width * 0.75;
        transform-origin: 66% center;
      }
      @elseif $style == 'align-right' {
        max-width: $width * 0.75;
        margin-left: $width * 0.25;
        transform-origin: 33% center;
      }
    }
    &::before,
    &::after {
      content: '';
    }
    &::before {
      top: 0;
    }
    &::after {
      bottom: 0;
    }
    &:hover {
      cursor: pointer;
    }
  }
  &:checked {
    @if $anim != -1 {
      #{$labelselector} {
        i {
          transform: scaleX(0.001);
        }
        &::before {
          transform: translateY($gap + $thickness) rotate(45deg);
        }
        &::after {
          transform: translateY(-($gap + $thickness)) rotate(-45deg);
        }
      }
    }
  }
  @include hamburger_tint($color, $tint_text, $labelselector);
}

// // Burger parts
// //
// // (---) top    -> &::before
// // [---] middle -> &
// // (---) bottom -> &::after

// // Vendor prefixes
// $sass-burger-add-vendor-prefixes: true !default;

// // Burger
// @mixin burger(
//   $width: 30px,
//   $height: 5px,
//   $gutter: 3px,
//   $color: #000,
//   $border-radius: 0,
//   $transition-duration: 0.3s
// ) {
//   $burger-height: $height !global;
//   $burger-gutter: $gutter !global;

//   position: relative;
//   margin-top: $height + $gutter;
//   margin-bottom: $height + $gutter;

//   @if $sass-burger-add-vendor-prefixes {
//     -webkit-user-select: none;
//     -moz-user-select: none;
//     -ms-user-select: none;
//   }
//   user-select: none;

//   // 1. Fixes jagged edges in Firefox, see issue #10.
//   &,
//   &::before,
//   &::after {
//     display: block;
//     width: $width;
//     height: $height;
//     background-color: $color;
//     outline: 1px solid transparent; // 1
//     @if $border-radius != 0 {
//       border-radius: $border-radius;
//     }

//     @if $sass-burger-add-vendor-prefixes {
//       -webkit-transition-property: background-color, -webkit-transform;
//       -moz-transition-property: background-color, -moz-transform;
//       -o-transition-property: background-color, -o-transform;
//     }
//     transition-property: background-color, transform;

//     @if $sass-burger-add-vendor-prefixes {
//       -webkit-transition-duration: $transition-duration;
//       -moz-transition-duration: $transition-duration;
//       -o-transition-duration: $transition-duration;
//     }
//     transition-duration: $transition-duration;
//   }

//   &::before,
//   &::after {
//     position: absolute;
//     content: '';
//   }

//   &::before {
//     top: -($height + $gutter);
//   }

//   &::after {
//     top: $height + $gutter;
//   }
// }

// // Select parts of the burger
// @mixin burger-parts {
//   &,
//   &::before,
//   &::after {
//     @content;
//   }
// }

// @mixin burger-top {
//   &::before {
//     @content;
//   }
// }

// @mixin burger-middle {
//   & {
//     @content;
//   }
// }

// @mixin burger-bottom {
//   &::after {
//     @content;
//   }
// }

// // Burger animations
// @mixin burger-to-cross($color: auto) {
//   & {
//     background-color: transparent;
//   }
//   @if ($color != auto) {
//     &::before,
//     &::after {
//       background-color: $color;
//     }
//   }
//   &::before {
//     @if $sass-burger-add-vendor-prefixes {
//       -webkit-transform: translateY($burger-gutter + $burger-height)
//         rotate(45deg);
//       -moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
//       -ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
//       -o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
//     }
//     transform: translateY($burger-gutter + $burger-height) rotate(45deg);
//   }
//   &::after {
//     @if $sass-burger-add-vendor-prefixes {
//       -webkit-transform: translateY(-($burger-gutter + $burger-height))
//         rotate(-45deg);
//       -moz-transform: translateY(-($burger-gutter + $burger-height))
//         rotate(-45deg);
//       -ms-transform: translateY(-($burger-gutter + $burger-height))
//         rotate(-45deg);
//       -o-transform: translateY(-($burger-gutter + $burger-height))
//         rotate(-45deg);
//     }
//     transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
//   }
// }
